<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <title>马股 Margin 计算器</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: center; }
    th { background: #f2f2f2; }
    input { width: 90%; padding: 4px; text-align: right; }
    .result { font-weight: bold; }
    .btn { padding: 6px 12px; margin: 4px; cursor: pointer; }
    .danger { background: #f66; color: #fff; }
    .accent { background: #4CAF50; color: #fff; }
  </style>
</head>
<body>
  <h2>马股 Margin 计算器</h2>
  <table id="stockTable">
    <thead>
      <tr>
        <th>股票</th>
        <th>数量</th>
        <th>股价</th>
        <th>Margin Rate (%)</th>
        <th>Market Value</th>
        <th>Margin Amount</th>
        <th>Outstanding Amount</th>
        <th>操作</th>
      </tr>
    </thead>
    <tbody id="stockBody"></tbody>
  </table>
  <button class="btn accent" onclick="addRow()">➕ 添加股票</button>
  <button class="btn accent" onclick="calculate()">📊 计算</button>
  <button class="btn" onclick="savePortfolio()">💾 保存组合</button>
  <button class="btn" onclick="loadPortfolio()">📂 加载组合</button>

  <h3>汇总</h3>
  <table>
    <tr><td>Total Market Value</td><td id="totalMarketValue" class="result">0</td></tr>
    <tr><td>Total Margin Amount</td><td id="totalMarginAmount" class="result">0</td></tr>
    <tr><td>Total Outstanding</td><td id="totalOutstanding" class="result">0</td></tr>
    <tr><td>Total Margin Position (%)</td><td id="totalMarginPosition" class="result">0%</td></tr>
    <tr><td>Available Cash</td><td id="availableCash" class="result">0</td></tr>
  </table>

  <h3>买入/卖出模拟</h3>
  <table>
    <tr>
      <td>股票</td><td><input type="text" id="simStock" placeholder="股票代码"></td>
      <td>数量 (买入正数/卖出负数)</td><td><input type="number" id="simQty"></td>
      <td>股价</td><td><input type="number" id="simPrice"></td>
      <td>Margin Rate (%)</td><td><input type="number" id="simMarginRate" value="50"></td>
    </tr>
  </table>
  <button class="btn accent" onclick="simulate()">🔍 模拟计算</button>

  <h4>模拟结果</h4>
  <table>
    <tr><td>Total Market Value (模拟后)</td><td id="simMarketValue">-</td></tr>
    <tr><td>Total Margin Amount (模拟后)</td><td id="simMarginAmount">-</td></tr>
    <tr><td>Total Outstanding (模拟后)</td><td id="simOutstanding">-</td></tr>
    <tr><td>Total Margin Position (%) (模拟后)</td><td id="simMarginPosition">-</td></tr>
    <tr><td>Available Cash (模拟后)</td><td id="simAvailableCash">-</td></tr>
  </table>

<script>
function addRow(stock="", qty=0, price=0, marginRate=50, outstanding=0) {
  let tbody = document.getElementById("stockBody");
  let row = document.createElement("tr");
  row.innerHTML = `
    <td><input type="text" value="${stock}"></td>
    <td><input type="number" value="${qty}"></td>
    <td><input type="number" value="${price}"></td>
    <td><input type="number" value="${marginRate}"></td>
    <td class="marketValue">0</td>
    <td class="marginAmount">0</td>
    <td><input type="number" value="${outstanding}"></td>
    <td><button class="btn danger" onclick="this.parentElement.parentElement.remove()">❌ 删除</button></td>
  `;
  tbody.appendChild(row);
}

function calculate() {
  let rows = document.querySelectorAll("#stockBody tr");
  let totalMarketValue = 0, totalMarginAmount = 0, totalOutstanding = 0;

  rows.forEach(row => {
    let qty = parseFloat(row.cells[1].querySelector("input").value) || 0;
    let price = parseFloat(row.cells[2].querySelector("input").value) || 0;
    let marginRate = parseFloat(row.cells[3].querySelector("input").value) || 0;
    let outstanding = parseFloat(row.cells[6].querySelector("input").value) || 0;

    let marketValue = price * qty;
    let marginAmount = marketValue * (marginRate / 100);

    row.querySelector(".marketValue").innerText = marketValue.toFixed(2);
    row.querySelector(".marginAmount").innerText = marginAmount.toFixed(2);

    totalMarketValue += marketValue;
    totalMarginAmount += marginAmount;
    totalOutstanding += outstanding;
  });

  let totalMarginPosition = totalMarginAmount > 0 ? (totalOutstanding / totalMarginAmount) * 100 : 0;

  // ✅ Available Cash (限制 ≤59.99%)
  let availableCash1 = totalMarginAmount - totalOutstanding;
  let availableCash2 = (totalMarginAmount * 0.5999) - totalOutstanding;
  let availableCash = Math.min(availableCash1, availableCash2);

  // 负 outstanding 时限制
  if (totalOutstanding < 0 && availableCash > Math.abs(totalOutstanding)) {
    availableCash = Math.abs(totalOutstanding);
  }
  if (availableCash < 0) availableCash = 0;

  document.getElementById("totalMarketValue").innerText = totalMarketValue.toFixed(2);
  document.getElementById("totalMarginAmount").innerText = totalMarginAmount.toFixed(2);
  document.getElementById("totalOutstanding").innerText = totalOutstanding.toFixed(2);
  document.getElementById("totalMarginPosition").innerText = totalMarginPosition.toFixed(2) + "%";
  document.getElementById("availableCash").innerText = availableCash.toFixed(2);
}

// 🔹 保存组合到 localStorage
function savePortfolio() {
  let rows = document.querySelectorAll("#stockBody tr");
  let data = [];
  rows.forEach(row => {
    data.push({
      stock: row.cells[0].querySelector("input").value,
      qty: parseFloat(row.cells[1].querySelector("input").value) || 0,
      price: parseFloat(row.cells[2].querySelector("input").value) || 0,
      marginRate: parseFloat(row.cells[3].querySelector("input").value) || 0,
      outstanding: parseFloat(row.cells[6].querySelector("input").value) || 0
    });
  });
  let name = prompt("请输入档案名：");
  if (!name) return;
  localStorage.setItem("portfolio_"+name, JSON.stringify(data));
  alert("已保存：" + name);
}

// 🔹 读取组合
function loadPortfolio() {
  let name = prompt("请输入要加载的档案名：");
  if (!name) return;
  let data = localStorage.getItem("portfolio_"+name);
  if (!data) { alert("未找到该档案"); return; }
  let rows = JSON.parse(data);
  document.getElementById("stockBody").innerHTML = "";
  rows.forEach(r => addRow(r.stock, r.qty, r.price, r.marginRate, r.outstanding));
  alert("已加载：" + name);
}

// 🔹 模拟买入/卖出
function simulate() {
  let qty = parseFloat(document.getElementById("simQty").value) || 0;
  let price = parseFloat(document.getElementById("simPrice").value) || 0;
  let marginRate = parseFloat(document.getElementById("simMarginRate").value) || 0;

  let totalMarketValue = parseFloat(document.getElementById("totalMarketValue").innerText) || 0;
  let totalMarginAmount = parseFloat(document.getElementById("totalMarginAmount").innerText) || 0;
  let totalOutstanding = parseFloat(document.getElementById("totalOutstanding").innerText) || 0;

  let tradeValue = qty * price;
  let tradeMargin = tradeValue * (marginRate / 100);
  let newOutstanding = totalOutstanding + tradeValue;
  let newMarketValue = totalMarketValue + tradeValue;
  let newMarginAmount = totalMarginAmount + tradeMargin;
  let newMarginPosition = newMarginAmount > 0 ? (newOutstanding / newMarginAmount) * 100 : 0;

  let availableCash1 = newMarginAmount - newOutstanding;
  let availableCash2 = (newMarginAmount * 0.5999) - newOutstanding;
  let newAvailableCash = Math.min(availableCash1, availableCash2);

  if (newOutstanding < 0 && newAvailableCash > Math.abs(newOutstanding)) {
    newAvailableCash = Math.abs(newOutstanding);
  }
  if (newAvailableCash < 0) newAvailableCash = 0;

  document.getElementById("simMarketValue").innerText = newMarketValue.toFixed(2);
  document.getElementById("simMarginAmount").innerText = newMarginAmount.toFixed(2);
  document.getElementById("simOutstanding").innerText = newOutstanding.toFixed(2);
  document.getElementById("simMarginPosition").innerText = newMarginPosition.toFixed(2) + "%";
  document.getElementById("simAvailableCash").innerText = newAvailableCash.toFixed(2);
}
</script>
</body>
</html>
